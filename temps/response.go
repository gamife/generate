package temps

var response = "package proto\n\nimport (\n)\n\ntype BaseResponse struct {\n\tRespCode int         `json:\"respCode\"`\n\tRespMsg  string      `json:\"respMsg\"`\n\tData     interface{} `json:\"data,omitempty\"`\n\tErr      error       `json:\"error,omitempty\"`\n}\n\n// 用户登录信息返回\ntype UserInfoResponse struct {\n\tEmpCode        string `json:\"empCode,omitempty\" description:\"用户id\"`\n\tState          int    `json:\"state,omitempty\" description:\"用户状态 0-正常 1-禁用\"`\n\tEmpName        string `json:\"empName,omitempty\" description:\"用户名\"`\n\tAvatar         string `json:\"avatar,omitempty\" description:\"头像\"`\n\tUnitCode       string `json:\"unitCode,omitempty\" description:\"单位编号\"`\n\tUnitName       string `json:\"unitName,omitempty\" description:\"单位名称\"`\n\tDepartmentId   string `json:\"department,omitempty\" description:\"部门\"`\n\tDepartmentName string `json:\"departmentName,omitempty\" description:\"部门名称\"`\n\tPosition       string `json:\"position,omitempty\" description:\"任职\"`\n\tTenantId       string `json:\"tenantId,omitempty\" description:\"租户编号\"`\n\tToken          string `json:\"token,omitempty\" description:\"token\"`\n}\n\nfunc (r BaseResponse) error() error { return r.Err }\n\n// Paging 通用分页结构\ntype Paging struct {\n\tPageNum     int         `json:\"pageNum\" description:\"当前页码\"`\n\tPageSize    int         `json:\"pageSize\" description:\"当前页大小\"`\n\tTotalPage   int         `json:\"totalPage\" description:\"总页数\"`\n\tTotalRow    int         `json:\"totalRow\" description:\"总条数\"`\n\tIsFirstPage bool        `json:\"isFirstPage\" description:\"是否是第一页\"`\n\tIsLastPage  bool        `json:\"isLastPage\" description:\"是否是最后一页\"`\n\tIsNextPage  bool        `json:\"isNextPage\" description:\"是否有下一页\"`\n\tList        interface{} `json:\"list\" description:\"数据列表\"`\n}\n\n// HealthResponse 健康检查响应结构\ntype HealthResponse struct {\n\tStatus bool `json:\"status\"`\n}\ntype IdResponse struct {\n\tId string `json:\"id,omitempty\" description:\"回显id\"`\n}\n\n/*g:k1*/\ntype {{.FuncName}}Response struct {\n\n}"
